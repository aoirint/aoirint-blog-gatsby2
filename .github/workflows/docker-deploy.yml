name: Build Docker and Dispatch Deploy

on:
  push:
    branches:
      - main
  release:
    types:
      - created
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/aoirint/aoirint-blog-gatsby2
  IMAGE_TAG: ${{ github.event.release.tag_name != '' && github.event.release.tag_name || 'latest' }}

jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      app_id: ${{ steps.get-app-id.outputs.app_id }}

    steps:
      - name: Get App ID
        id: get-app-id
        run: echo "app_id=${{ vars.APP_ID }}" >> "${GITHUB_OUTPUT}"

  docker-build-and-push:
    needs: [config]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Deploy Docker image
        uses: docker/build-push-action@v5
        env:
          IMAGE_NAME_AND_TAG: ${{ format('{0}:{1}', env.IMAGE_NAME, env.IMAGE_TAG) }}
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME_AND_TAG }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME_AND_TAG }}-buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME_AND_TAG }}-buildcache,mode=max

  dispatch-deploy:
    needs: [config,docker-build-and-push]

    runs-on: ubuntu-latest
    if: ${{ needs.config.outputs.app_id != ''}}

    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ needs.config.outputs.app_id }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          repositories: aoirint/aoirint-blog-deploy

      - name: Dispatch deploy workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'aoirint',
              repo: 'aoirint-blog-deploy',
              workflow_id: 'docker-deploy.yml',
              ref: 'main',
            })
